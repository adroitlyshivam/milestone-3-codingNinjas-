#Queue Using LL

class Queue {
    Node*head;
    int size = 0;
    Node*tail;

public:


    Queue() {
        head = NULL;
        tail = NULL;
        size = 0;
    }

    int getSize() {
        return size;
    }

    bool isEmpty() {

        return size == 0;
    }
    int front()  {
        // Return 0 if queue is empty
        if (head == NULL)
        {
            return -1;
        }
        return head->data;
    }

    void enqueue(int data) {
        Node*newNode = new Node(data);

        if (head == NULL)
        {
            head = newNode;
            tail = newNode; //
            //  return;
        }
        else {
            tail->next = newNode; //
            tail = newNode; //

        }
        size++;
    }


    int dequeue() {
        // Return 0 if queue is empty
        if (head == NULL)
        {
            return -1;
        }
        int ans = head->data;
        Node*temp = head;
        head = head->next;
        delete temp;
        size--;
        return ans;
    }


};