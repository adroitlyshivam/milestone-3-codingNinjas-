 ## Merge Sort Code


void merge(int A[],int s,int mid,int e){

    int i=s;
    int j=mid+1;
   int k=0;
    int B[e-s+1];
    while(i<=mid&&j<=e){
        if(A[i]>=A[j]){
            B[k]=A[j];
            j++;
        }
        else{
            B[k]=A[i];
        	i++;
        }
            k++;
    }
    while(i<=mid){
        B[k]=A[i];
        k++;
        i++;
    }
    while(j<=e){
        B[k]=A[j];
        j++;
        k++;
    }
    
     
    for(int l=s;l<=e;l++){ //change l starts from s
        A[l]=B[l-s];	
    }
}
void MergeSort(int A[],int s,int e){
    if(s>=e)
        return;
        
    int mid=(s+e)/2;
    
MergeSort(A,s,mid);
    MergeSort(A,mid+1,e);
    merge(A,s,mid,e);
    
}
void mergeSort(int input[], int size){
    int s=0,e=size-1;
  MergeSort(input,s,e);
}
